name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04
    environment:
      name: test
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout our code
        uses: actions/checkout@v4.1.1
      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.12'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install requirements.txt
        run: pip install -r requirements.txt
      - name: Start tests
        run: |
          pip install pytest
          pytest
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3.1.0
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#        with:
#          version: v0.10.0
#      - name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/lovely-you-api:latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    environment:
      name: production
    steps:
      - name: Checkout our code
        uses: actions/checkout@v4.1.1
      - name: Deploy to Ubuntu
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          password: ${{secrets.PROD_PASSWORD}}
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api


